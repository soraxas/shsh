#!/usr/bin/env sh
# Summary: Configure the shell environment for shsh
# Usage: eval "$(shsh init SHELL)"
#
# SHELL: sh, bash, zsh, fish, etc.

# shellcheck disable=SC2016
set -e

if [ "$#" -ne 1 ]; then
  shsh-help init
  exit 1
fi

# TAG completions
if [ "$1" = "--complete" ]; then
  printf '%s\n' sh bash zsh fish
  exit
fi

shell="$1"

print_fish_commands() {
  echo "set -gx SHSH_ROOT $SHSH_ROOT"
  echo "set -gx SHSH_PREFIX $SHSH_PREFIX"
  echo "set -gx SHSH_PACKAGES_PATH $SHSH_PACKAGES_PATH"

  # add to fish_user_path instead for better management
  # echo 'not contains $SHSH_ROOT/cellar/bin $fish_user_paths'
  echo 'set -px fish_user_paths $SHSH_ROOT/cellar/bin'

  # echo 'not contains $SHSH_ROOT/cellar/bin $PATH'
  # echo 'and set -gx PATH $SHSH_ROOT/cellar/bin $PATH'

  if [ -d "$SHSH_INSTALL_ARCHPKG_ROOT" ]; then
    echo "set -gx SHSH_ARCKPKG_ROOT $SHSH_INSTALL_ARCHPKG_ROOT"
    # echo 'not contains $SHSH_ROOT/cellar/archpkg_root/usr/bin $fish_user_paths'
    echo 'and set -p fish_user_paths $SHSH_ARCKPKG_ROOT/usr/bin'

    # echo 'not contains $SHSH_ARCKPKG_ROOT/usr/lib $LD_LIBRARY_PATH'
    echo 'set -px LD_LIBRARY_PATH $SHSH_ARCKPKG_ROOT/usr/lib'

    # echo 'not contains $SHSH_ARCKPKG_ROOT/usr/share $XDG_DATA_DIRS'
    echo 'set -px XDG_DATA_DIRS $SHSH_ARCKPKG_ROOT/usr/share'

    echo 'set -gx LDFLAGS "-L$SHSH_ARCKPKG_ROOT/usr/lib $LDFLAGS"'
    echo 'set -gx CFLAGS "-I$SHSH_ARCKPKG_ROOT/usr/include $CFLAGS"'
    echo 'set -px PKG_CONFIG_PATH "$SHSH_ARCKPKG_ROOT/usr/lib/pkgconfig"'
  fi
}

print_sh_commands(){
  echo "export SHSH_ROOT=$SHSH_ROOT"
  echo "export SHSH_PREFIX=$SHSH_PREFIX"
  echo "export SHSH_PACKAGES_PATH=$SHSH_PACKAGES_PATH"

  echo 'export PATH="$SHSH_ROOT/cellar/bin:$PATH"'

  if [ -d "$SHSH_INSTALL_ARCHPKG_ROOT" ]; then
    echo 'export PATH="$SHSH_ROOT/cellar/archpkg_root/usr/bin:$PATH"'
    echo 'export LD_LIBRARY_PATH="$SHSH_ROOT/cellar/archpkg_root/usr/lib:$LD_LIBRARY_PATH"'
    echo 'export XDG_DATA_DIRS="$SHSH_ROOT/cellar/archpkg_root/usr/share:$XDG_DATA_DIRS"'

    echo 'export LDFLAGS="-L$SHSH_ARCKPKG_ROOT/usr/lib $LDFLAGS"'
    echo 'export CFLAGS="-I$SHSH_ARCKPKG_ROOT/usr/include $CFLAGS"'
    echo 'export PKG_CONFIG_PATH="$SHSH_ROOT/cellar/archpkg_root/usr/share:$PKG_CONFIG_PATH"'
  fi
}

load_bash_package_completions() {
  _folder="$SHSH_ROOT/cellar/completions"
  echo 'for f in $(command ls "'"$_folder"'/bash"); do source "'"$_folder"'/bash/$f"; done'

  _folder="$SHSH_INSTALL_ARCHPKG_ROOT/usr/share/bash-completion/completions"
  if [ -d "$_folder" ]; then
    echo 'for f in $(command ls "'"$_folder"'"); do source "'"$_folder"'/$f"; done'
  fi
}

load_zsh_package_completions() {
  echo 'fpath=("$SHSH_ROOT/cellar/completions/zsh/compsys" $fpath)'
  echo 'for f in $(command ls "$SHSH_ROOT/cellar/completions/zsh/compctl"); do source "$SHSH_ROOT/cellar/completions/zsh/compctl/$f"; done'
}

# init variables and path for shsh
case "$shell" in
  fish )
    print_fish_commands
    ;;
  * )
    print_sh_commands
    ;;
esac

# init completions for shsh
if [ "$shell" != fish ]; then
  if [ -e "$SHSH_ROOT/lib/include.$shell" ]; then
    echo ". \"\$SHSH_ROOT/lib/include.$shell\""
  fi

  if [ -e "$SHSH_ROOT/completions/shsh.$shell" ]; then
    echo ". \"\$SHSH_ROOT/completions/shsh.$shell\""
  fi
  # completions for fish is loaded on-demand by completions path
fi

# init completions for packages
case "$shell" in
  bash )
    load_bash_package_completions
    ;;
  zsh )
    load_zsh_package_completions
    ;;
  fish )
    echo "set -px fish_complete_path $SHSH_PREFIX/completions/fish"
    if [ -d "$SHSH_INSTALL_ARCHPKG_ROOT" ]; then
      echo "set -p fish_complete_path $SHSH_INSTALL_ARCHPKG_ROOT/usr/share/fish/completions"
    fi
    ;;
esac
