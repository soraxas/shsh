#!/usr/bin/env sh
#
# Summary: List installed packages
# Usage: shsh list [-d|--details]
#
# Options:
#   -d, --details    display the URL of the repository

set -e
# shellcheck source=libexec/shsh-_utils
. "${UTILS_FUNC:?}"

case $1 in
  -d|--details)
    show_details="true"
    shift
  ;;
esac

if [ "$#" -gt 0 ]; then
  shsh-help list
  exit 1
fi

for package_path in "${SHSH_PACKAGES_PATH}"/*/*; do
  is_file_or_link "$package_path" || continue

  username="$(dirname "$package_path")"
  username="${username##*/}"
  package="${package_path##*/}"
  if [ -z "$show_details" ]; then
    echo "$username/$package"
  else
    if [ -L "$package_path" ]; then
      # is a locally linked folder
      extra_info="linked: $(resolve_link "$package_path")"
    else
      if [ -d "$package_path/".git ]; then
        # is a git with remote upstream
        extra_info="$(git --git-dir="$package_path/".git config --get remote.origin.url)"
      elif [ -e "$package_path/.gh-release_info" ]; then
        if has_jq; then
          extra_info="gh-release: $(jq -r '.tag_name' < "$package_path/.gh-release_info")"
        else
          extra_info="gh-release: unknown (missing jq)"
        fi
      else
        # is a plain package
        extra_info="plain package"
      fi
    fi
    printf "%-35s %-30s\n" "$username/$package" "($extra_info)"
  fi
done
