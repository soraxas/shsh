#!/usr/bin/env sh
# Summary: Installs a local directory as a shsh package
# Usage: shsh link [--no-deps] <directory> <package> [-h|--hook <hook>] [-v|--variable <VAR>=<VAL>]

set -e
# shellcheck source=libexec/shsh-_utils
. "${UTILS_FUNC:?}"

parse_hooks_and_setvar "$@" || exit "$?"
# set back $@ from leftovers
# shellcheck disable=SC2086
set -- $SHSH_ARGV

no_deps="false"

case $1 in
  --no-deps)
    no_deps="true"
    shift
  ;;
esac

if [ "$#" -ne 2 ]; then
  shsh-help link
  exit 1
fi

directory="$1"
parse_install_folder "$2" && package="$_folder_full"

if [ ! -d "$directory" ]; then
  echo "Directory '$directory' not found."
  exit 1
fi

if [ -z "$package" ]; then
  shsh-help link
  exit 1
fi

package_not_exists "$package" || exit 1

if [ -d "${SHSH_PACKAGES_PATH}/$package" ]; then
  echo "Package '$package' is already present"
  exit 1
fi

# Make sure the namespace directory exists before linking
mkdir -p "${SHSH_PACKAGES_PATH}/$_folder_namespace"

# Resolve local package path
directory="$(resolve_link "$directory")"

target_folder="${SHSH_PACKAGES_PATH}/$_folder_namespace/$_folder_target"

ln -s "$directory" "$target_folder"

# shsh-_link-bins "$package"
# shsh-_link-completions "$package"
# shsh-_link-man "$package"

shsh-_post-install "$package" "$target_folder"

if [ "$no_deps" = "false" ]; then
  shsh-_deps "$package"
fi
